---
- name: Check if kubeadm has already initialized the cluster
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubeadm_init_conf
      
- name: Create kubeadm config file
  template:
    src: kubeadm-config.yaml.j2  # Create this template file separately
    dest: /tmp/kubeadm-config.yaml
    owner: root
    group: root
    mode: '0600'
  when: not kubeadm_init_conf.stat.exists
      
- name: Initialize Kubernetes master with kubeadm
  command: kubeadm init --config=/tmp/kubeadm-config.yaml --upload-certs
  when: not kubeadm_init_conf.stat.exists
  register: kubeadm_init
      
- name: Store kubeadm join command for worker nodes
  when: kubeadm_init.changed
  block:
    - name: Get join command
      command: kubeadm token create --print-join-command
      register: join_command

- name: Set join command fact
  set_fact:
    kubernetes_join_command: "{{ join_command.stdout }}"
            
- name: Save join command to file
  local_action:
    module: copy
    content: "{{ kubernetes_join_command }}"
    dest: "{{ kubernetes_join_command_file }}"
  become: false
          
- name: Create .kube directory for root user
  file:
    path: /root/.kube
    state: directory
    mode: '0700'
        
- name: Copy admin.conf to root's .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0600'
        
- name: Create .kube directory for regular user
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0700'
  when: ansible_user != "root"
      
- name: Copy admin.conf to user's .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
  when: ansible_user != "root"
      
- name: Install CNI plugin - Calico
  block:
    - name: Download Calico manifests
      get_url:
        url: https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
        dest: /tmp/calico.yaml
        mode: '0644'
      register: calico_download
          
    - name: Apply Calico manifests
      command: kubectl apply -f /tmp/calico.yaml
      register: calico_apply
      changed_when: "'created' in calico_apply.stdout or 'configured' in calico_apply.stdout"
  when: cni_plugin == "calico" and (not kubeadm_init_conf.stat.exists or kubeadm_init.changed)
      
- name: Wait for all pods in kube-system to be ready
  shell: |
    kubectl wait --for=condition=Ready pods --all -n kube-system --timeout=300s
  register: wait_result
  changed_when: false
  failed_when: false  # Don't fail if some pods are not ready yet
      
- name: Check cluster status
  command: kubectl get nodes -o wide
  register: nodes_status
  changed_when: false
      
- name: Display node status
  debug:
    var: nodes_status.stdout_lines
